Material
Mesh
Instance
Shader

MeshInstances -> MeshId, Transform[] (count)
(Entity -> Model)
Model -> Mesh[] (Transform)
Mesh -> Material (vertices, normals, uvs)
Material -> Shader (uniforms)

- Shader
- Material
  - Shader
- Mesh
  - 
- Model
  - Mesh ptr
  - Transform
  - Material ptr
- MeshInstance
  - Mesh ptr
  - Transform[]
  - count

Rendering pipeline -

- loop
  - renderer.render(window)
    - textureCache
    - Model
      - Material
        - Uniforms
        - Shader
      - Mesh

Renderer -

TextureCache textureCache
UniformMap uniforms

for Model model:
	Material material = model.material
	Shader shader = material.shader

	material.bind(uniforms)
		-> shader.bind()
			-> setUniform: projectionMatrix
			-> setUniform: t
		-> texture.bind()
			-> setUniform: txtSampler
			-> glActiveTexture
	for Mesh mesh : model.mesh:
		mesh.bind(uniforms)
			-> glBindVertexArray(vaoId)
			-> setUniform: modelMatrix
		glDrawElements